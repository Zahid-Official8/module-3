Note:

Github এ  repository এর নাম যদি একাধিক ওয়ার্ডের হয় তাহলে তারমাঝে স্পেস দেয়া যাবে না বরং - হাইফেন দিতে হবে। repository এর নামের সাথে মিল রেখে ডেক্সটপের যেই ফোল্ডার পুস করা হবে সেটা এর নাম রাখা উচিত। কারণ দুটোর নাম ভিন্ন হলে কনফিউশন বা ঝামেলা লেগে যেতে পারে।



ফোল্ডারের সাথে গিটহাব লিংক করাতে প্রথমেই  vs code termital এ গিয়ে new terminal ওপেন করতে হবে। এরপর ডান সাইটে powershall থেকে bash ক্লিক করতে হবে। 
এরপর  terminal এ       echo "# module-0" >> README.md   এই লেখাটা গিটহাব থেকে কপি করে এনে পেস্ট করে enter দিতে হবে।
এরপর git init এই লেখাটা গিটহাব থেকে কপি করে এনে পেস্ট করে enter দিতে হবে।
এরপর git লিখে একটা স্পেস দিয়ে add লিখবে এবং এরপর একটা স্পেস দিয়ে . ডট দিয়ে  enter দিতে হবে।  ( যাতে সবগুলো ফাইল সিলেক্ট হতে পারে )
এরপর git লিখে স্পেস দিয়ে commit লিখবে এবং স্পেস দিয়ে -m হাইফেন দিয়ে  m এবং এরপর "" ডাবল কোটেশনের ভিতরে কোনো একটা ম্যাসেজ লিখবে যেটা দেখে বুঝা যায় কি আপডেট করা হয়েছে। এরপর enter দিতে হবে। যেমন, git commit -m"orientation module"

এরপর প্রথমবার ইউজ করলে একাউন্ট লিংক করতে হবে।
 এরজন্য  git config --global user.email "your@gmail.com" এ কোটেশনে নিজের মেইলটা দিয়ে  enter দিবে।
এরপর $ git config --global user.name "Your Name"

এবার একাউন্ট যখন লিংক হয়ে যাবে তখন আবার পুনরায়  git commit -m"message" করতে হবে।
এরপর ব্যাঞ্চ চেঞ্জ করতে চাইলে git branch -M main এটা দিবে। অন্যথায় না দিলেও চলবে, অসুবিধা নাই। তবে দিয়ে দিলেই ভালো।
এরপর git remote add origin https://github.com/Zahid-Official8/module-0.git এই লেখাটা গিটহাব থেকে কপি করে এনে পেস্ট করে enter দিবে।
এরপর git push -u origin main এই লেখাটা গিটহাব থেকে কপি করে এনে পেস্ট করে enter দিবে।

এরপর প্রথমবার ইউজ করলে authorize permission চাইবে , সেটা দিয়ে দিলেই হবে।

গিটহাবে কোনো কোড পুশ করার পর কম্পিউটারে ওই ফাইলে কোন চেঞ্জ করলে গিটহাব ফাইলে তা চেঞ্জ হবে না। এরজন্য গিটহাবে পুনরায় পুশ করে ফাইলটি আপডেট করতে হবে। 
ফাইলে কোনো কিছু চেঞ্জ করলে vs code এর গিট অপশনে কতগুলো চেঞ্জ আছে তার নাম্বার লেখা দেখাবে। তাতে ক্লিক করে ফাইলে ক্লিক করলে আপডেটের আগে ফাইল ও পরের ফাইলের মধ্যে কি কি পার্থক্য তা দেখাবে। এবার যদি মনে হয় চেঞ্জগুলো গিটহাবে পুশ করা দরকার তাহলে নিচের স্টেপগুলো ফলো করতে হবে।

প্রথমে  git add . লিখে  enter দিবে।
এরপর git commit -m"message" লিখে  enter দিবে।
এরপর git push দিলেই হয়ে যাবে।

team work এ একই রিপোতে একাধিক মানুষ কাজ করে থাকে। এখন কেউ গিটহাবের রিপোতে কোন চেঞ্জ করলে আমার কম্পিউটারের ফাইলে তা চেঞ্জ হবে না। এরজন্য পুল করে তা লোকালে আনতে হবে। পুল করার জন্য  git pull লিখে  enter দিলেই লোকাল ফাইলটি আপডেট হয়ে যাবে। এখন কি কি আপডেট হয়েছে তা যদি বুঝতে কোনো ঝামেলা হয় তাহলে vs code এর গিট অপশনে কতগুলো চেঞ্জ আছে তার নাম্বার লেখা দেখাবে। তাতে ক্লিক করে ফাইলে ক্লিক করলে আপডেটের আগে ফাইল ও পরের ফাইলের মধ্যে কি কি পার্থক্য তা দেখাবে।




গিটহাবের রিপোর লিংক যদি কাউকে দেয়া হয় তাহলে কোডগুলো সে দেখতে পারবে। কিন্তু কোডের আউটপুট মানে ব্রাউজারে তা কেমন দেখাবে তা কিন্তু সে বুঝতে পারবে না। এরজন্য রিপোটাকে লাইভ করতে হবে। গিটহাবের রিপো যদি পাবলিশ করতে হয় তাহলে নিচের স্টেপগুলো ফলো করতে হবে।

প্রথমে setting এ যাবে ।এরপর github pages এ গিয়ে Check it out here! এ ক্লিক করে  branch & root সেট করে দিয়ে সেভ দিবে। তাহলে পেজটা রিলোড হয়ে Your site is published at এই লেখা দেখাবে এবং পাশে একটা লিংক দেয়া থাকবে। এই লিংকটাই হলো রিপোর লাইভ লিংক। এখান কাউকে এই লিংকটা দিলে সে কোড না দেখেও আউটপুট দেখতে পারবে চাইলে। 
যদি এমন হয় যে যেই ফাইলটি লাইভ করতে চাই সেটা রুট ফোল্ডারে নেই বরং কোনো ফোল্ডারের ভিতরে আছে তা সেক্ষেত্রে লাইভ লিংকে পাথটা বলে দিতে হবে। গিটহাব সরাসরি রুট ফোল্ডারই লাইভ করে দিবে। তাই গিটগাব যেই লিংকটি দিয়েছে সেটা পরে / দিয়ে ফোল্ডার নাম লিখে দিলেই হয়ে যাবে ঠিক লোকালে ইমেজের পাথ যেভাবে সেট করা হয়।

যদি এমন হয় যে কোড সবকিছু ঠিক আছে তারপরও রিলোড দেয়ার পর আপডেটেড কোডটা কাজ করছে না তাহলে ব্রাউজারের ক্যাশ ডিলেট করে দেখতে হবে। এরজন্য inspect করে  reload icon এ রাইট বাটন চেপে ধরলে empty cache অপশনে ক্লিক করলে হয়ে যাবে।

কতগুলো ব্রাঞ্চ আছে তা দেখতে git branch লিখতে হয়।  গিটহাবে নতুন branch বানাতে হলে git branch branch-name লিখতে হবে। এবং নাম একাধিক শব্দের হলে মাঝে - হাইফেন দিবে। branch পর তাতে কাজ করতে সুইচ করতে হবে। এরজন্য git checkout branch-name লিখতে হবে। আর যদি এমন হয় নতুন ব্রাঞ্চ বানাবেও এবং তাতে সুইচ করবে তাহলে git checkout -b branch-name লিখলেই হবে। এরপর নতুন ব্রাঞ্চ গিটহাবে পুশ করতে হবে।তবে প্রথমবার ব্রাঞ্চ পুশ করতে git push --set-upstream origin branch-name লিখবে।
তবে গিটহাবে কোনো নতুন ব্রাঞ্চ খোলা হয় তাহলে সেটা কিন্তু লোকালে থাকবে না, সেটা নিয়ে কাজ করতে হলে অবশ্যই সেটাকে লোকালে আনতে হবে। লোকালে আনার জন্য  git pull লিখে  enter দিলেই হয়ে যাবে। লোকালে কোন চেঞ্জ যদি থাকে যেটা পুশ করা হয়নি সেটা চেক করতে চাইলে git status লিখবে।

টিমে যখন কাজ করবে তখন সবসময় ২টা বিষয় খেয়াল রাখবে। ১. যখনই কাজ শুরু করবে git pull করে নিবে। ২. যখনই নতুন কোনো ব্রাঞ্চ নিয়ে কাজ করবে main ব্রাঞ্চের কোডগুলো git merge
করে নতুন ব্রাঞ্চে নিয়ে নিবে।তাহলে আর তেমন ঝামেলা হবে না। এছাড়া গিট খুবই case sensetive। তাই ছোট-বড় হাতের অক্ষরের দিকে খেয়াল রাখতে হবে।

